{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "appDnsPrefix": {
            "type": "string",
            "minLength": 3,
            "defaultValue": "[concat('iwa-fortify', uniqueString(resourceGroup().id))]",
            "metadata": {
                "description": "Prefix name for web app components, accepts numbers and letters only."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        }
    },
    "functions": [],
    "variables": {
        "storageAccountName": "[replace(concat(toLower(parameters('appDnsPrefix')), 'stg'),'-', '')]",
        "servicePlanName": "[concat(parameters('appDnsPrefix'), 'ServicePlan')]",
        "webAppName": "[concat(parameters('appDnsPrefix'), '-web')]",
        "appInsightsName": "[concat(parameters('appDnsPrefix'), 'AppInsights')]",
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "sku": {
                "name": "Standard_RAGRS"
            },
            "kind": "Storage",
            "name": "[variables('storageAccountName')]",
            "apiVersion": "2017-06-01",
            "location": "[parameters('location')]",
            "properties": {
            "cors": {
              "corsRules": [
                {
                  "allowedOrigins": [
                    "*"
                  ],
                  "allowedMethods": [
                    "GET"
                  ],
                  "maxAgeInSeconds": 0,
                  "exposedHeaders": [
                    "*"
                  ],
                  "allowedHeaders": [
                    "*"
                  ]
                }
              ]
            }
          },
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "sku": {
                "name": "B1"
            },
            "kind": "app",
            "name": "[variables('servicePlanName')]",
            "apiVersion": "2016-09-01",
            "location": "[parameters('location')]",
            "properties": {
                "name": "[variables('servicePlanName')]"
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "kind": "app",
            "name": "[variables('webAppName')]",
            "apiVersion": "2016-08-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('servicePlanName'))]"
            ],
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('servicePlanName'))]"
            },
            "resources": [
                {
                    "type": "config",
                    "name": "web",
                    "apiVersion": "2016-08-01",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', variables('webAppName'))]"
                    ],
                    "properties": {
                        "javaVersion": "1.8",
                        "javaContainer": "TOMCAT",
                        "javaContainerVersion": "9.0"
                    }
                }
            ]
        },
        {
            "type": "microsoft.insights/components",
            "kind": "java",
            "name": "[variables('appInsightsName')]",
            "apiVersion": "2015-05-01",
            "location": "[parameters('location')]",
            "tags": {
                "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', variables('webAppName'))]": "Resource"
            },
            "properties": {
                "ApplicationId": "[variables('appInsightsName')]",
                "Application_Type": "web"
            }
        }
    ],
    "outputs": {
        "webAppURL": {
            "type": "string",
            "value": "[concat('http://', reference(variables('webAppName')).defaultHostName)]"
        }
    }
}
